Array
	my_array = [1, 2, 3, 4]
		Inhalt es Arrays wird in "[]" eingetragen.

	Der Inhalt des Array kann über einer Index adressiert werden
				+---+---+---+---+---+
	array   | 1 | 2 | 3 | 4 | 5 |
        +---+---+---+---+---+
	index     0   1   2   3   4

	Dies geht mit dem Befehl: array[x]
	In "[]" wird die Index-Nummer angegeben, wobei der Index bei 0 anfängt.

	Array Inhalt löschen
		array.delete("Eintrag-Name")

	Array erweitern
		array << "Name" 
			Fügt den Inhalt als nächsten Eintrag hinzu
		array.push("Name")

	Array verkürzen
		array.pop (Löscht letzten Eintrag)
		array[X] = nil

	Shortcut für Array
		array = %w(Heinz, Harald, Johannes)
			Leerzeichen werden als "," gewertet
			!!!Zahlen werden immer als String hinterlegt!!!

	Join mit Seperator
		array.join("-")
			Gibt das Array aus mit dem Inhalt aus der Klammer als Seperator

	Arrays mit Arrays
		Arrays können verschachtelt werden:
			multi_d_array = [[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]

			Um eine Variable zu adressieren wird jetzt 2 Stufig adressiert.
			array[0][1]. Dies greift auf den 2. Eintrag im 1. Array zu.

		Multidimensionale Arrays mit .each
			s = [["ham", "swiss"], ["turkey", "cheddar"], ["roast beef", "gruyere"]]

			s.each do
    		|sub_array|
    		sub_array.each do
        	puts sub_array
				end
			end

Mögliche Methoden:
	:to_s, :to_a, :to_h, :to_ary, :frozen?, :==, :eql?, :hash, :[], :[]=, :at, :fetch, :first, :last, :concat, :<<, :push, :pop, :shift, :unshift, :insert, :each, :each_index, :reverse_each, :length, :size, :empty?, :find_index, :index, :rindex, :join, :reverse, :reverse!, :rotate, :rotate!, :sort, :sort!, :sort_by!, :collect, :collect!, :map, :map!, :select, :select!, :keep_if, :values_at, :delete, :delete_at, :delete_if, :reject, :reject!, :zip, :transpose, :replace, :clear, :fill, :include?, :<=>, :slice, :slice!, :assoc, :rassoc, :+, :*, :-, :&, :|, :uniq, :uniq!, :compact, :compact!, :flatten, :flatten!, :count, :shuffle!, :shuffle, :sample, :cycle, :permutation, :combination, :repeated_permutation, :repeated_combination, :product, :take, :take_while, :drop, :drop_while, :bsearch, :pack, :entries, :sort_by, :grep, :find, :detect, :find_all, :flat_map, :collect_concat, :inject, :reduce, :partition, :group_by, :all?, :any?, :one?, :none?, :min, :max, :minmax, :min_by, :max_by, :minmax_by, :member?, :each_with_index, :each_entry, :each_slice, :each_cons, :each_with_object, :chunk, :slice_before, :lazy, :nil?, :===, :=~, :!~, :class, :singleton_class, :clone, :dup, :taint, :tainted?, :untaint, :untrust, :untrusted?, :trust, :freeze, :methods, :singleton_methods, :protected_methods, :private_methods, :public_methods, :instance_variables, :instance_variable_get, :instance_variable_set, :instance_variable_defined?, :remove_instance_variable, :instance_of?, :kind_of?, :is_a?, :tap, :send, :public_send, :respond_to?, :extend, :display, :method, :public_method, :singleton_method, :define_singleton_method, :object_id, :to_enum, :enum_for, :equal?, :!, :!=, :instance_eval, :instance_exec, :__send__, :__id__] 
